Parameters:
  KeyName:
    Description: Existing KeyPair name
    Type: 'AWS::EC2::KeyPair::KeyName'
    Default: AjUserApril82020
  VPCCidrRange:
    Description: Enter the CIDR for the VPC that you want to create
    Type: String
    Default: 10.0.0.0/16
Mappings:
  RegionMap:
    ca-central-1:
      AMI: ami-0f75c2980c6a5851d
    us-east-1:
      AMI: ami-09d95fab7fff3776c
Resources:
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidrRange
      Tags:
        - Key: Name
          Value: MyVPC

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      AvailabilityZone: ca-central-1a
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: 'true'
      Tags:
        - Key: Name
          Value: Public Subnet

  MyInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: IGW

  VPCIgwAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref MyInternetGateway
      VpcId: !Ref MyVPC

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: Public RT

  PublicRTPublicSubnetAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet

  PublicSubnetInternetRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCIgwAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MyInternetGateway

  PublicSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow rules for public subnet SSH, HTTP, HTTPS
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: Public Security Group

Outputs:
  VPCId:
    Description: VPC Info that is created
    Value: !Ref MyVPC
  PublicSubnetId:
    Description: The region where VPC was created
    Value: !Ref PublicSubnet
  KeyPairName:
    Description: The key pair that is used to login to the EC2 instance
    Value: !Ref KeyName
  PublicSecGroup: 
    Description: Public Security Group Id
    Value: !Ref PublicSecurityGroup
  SelectedAMI:
    Description: The selected AMI
    Value: !FindInMap [RegionMap, !Ref "AWS::Region", AMI]